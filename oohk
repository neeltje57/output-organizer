#!/bin/bash
# ==================================================================================
# /usr/local/bin/oohk
# ==================================================================================
# Change this variable to the directory where the configurationi files are stored. =
# Normally this would be: oo_confpath="/etc/oo"                                    =
# The quotes are needed in case there are spaces in the directory name.            =
oo_confpath="/home/peter/oo/etc/oo"
# ==================================================================================

# ===========================================================================
# Don't change anything below this line unless you know what you are doing. =
# ===========================================================================

# Load configuration file
# Get parms from system config file
if [[ -f "$oo_confpath"/oo.conf ]] ; then
  eval $(grep "^oo_logbasepath=" "$oo_confpath"/oo.conf)
fi
if [[ -z "$oo_logbasepath" \
   ]]; then
  echo "One or more mandatory variables are not set in the config file: ""$oo_confpath"/oo.conf
  echo "  oo_logbasepath          : ""$oo_logbasepath"
  echo "see documentation"
  exit 1
fi

function oo_isvaliddate() {
 if [[ "$1" =~ ^[0-9]{4}-[0-9]{2}-[0-9]{2}$ ]] && date -d "$1">/dev/null 2>&1; then
   return 0
 else
   return 1
 fi;
}

oo_reportfile=$(mktemp)
{
oo_totalfiles=0
oo_totalexpiredfiles=0
oo_totalvaliddates=0
oo_totalinvaliddates=0
oo_totalemptydirs=0
oo_currentdate=`date +%Y-%m-%d`
for oo_userdir in "$oo_logbasepath"/*
do
  if [[ -d "$oo_userdir" ]]; then
    # directory per user
    oo_user=`basename "$oo_userdir"`
    echo "Processing files for user: ""$oo_user"
    oo_userfiles=0
    oo_emptydirs=0
    for oo_directory2 in "$oo_userdir"/*
    do
      if [[ -d "$oo_directory2" ]]; then
        if [[ ! `basename "$oo_directory2"` == `basename "$0"` ]]; then
          # directory per user script
          echo "Processing files from directory: ""$oo_directory2"
          oo_directoryfiles=0
          oo_validdates=0
          oo_invaliddates=0
          oo_filesexpired=0
          for oo_file in "$oo_directory2"/*
          do
            if [[ -f "$oo_file" ]]; then
              # process each file in user script directory
              # echo "-""$oo_file"
              (( oo_totalfiles++ ))
              (( oo_userfiles++ ))
              (( oo_directoryfiles++ ))
              oo_expirationline=`sed -n '3p' "$oo_file"`
              oo_expirationdate=${oo_expirationline:20:10}
              #echo 1"$oo_expirationline"
              #echo 2"$oo_expirationdate"
              if ( oo_isvaliddate $oo_expirationdate ); then
                (( oo_validdates++ ))
                (( oo_totalvaliddates++ ))
                if [[ "$oo_currentdate" > "$oo_expirationdate" ]]; then
                  # file expired, will be deleted
                  rm -f "$oo_file"
                  (( oo_filesexpired++ ))
                  (( oo_totalexpiredfiles++ ))
                fi
              else
                echo "File has an invalid expiration date on line 3, will be deleted: ""$oo_file"
                rm -f "$oo_file"
                (( oo_invaliddates++ ))
                (( oo_totalinvaliddates++ ))
              fi
            fi
          done
          echo "Processed files        : "$oo_directoryfiles
          echo "Processed valid dates  : "$oo_validdates
          echo "Processed expired files: "$oo_filesexpired
          echo "Processed invalid dates: "$oo_invaliddates
          # check if dir is empty
          if find "$oo_directory2"/ -maxdepth 0 -empty | read v; then
            echo "Empty directory, will be deleted: ""$oo_directory2"
            rm -rfv "$oo_directory2"/
            (( oo_emptydirs++ ))
            (( oo_totalemptydirs++ ))
          fi
        else
          echo "`basename "$0"` directory will be skipped: ""$oo_directory2" >>$oo_reportfile
        fi
      fi
    done
    echo "Total files for user ""$oo_user"": ""$oo_userfiles"
    echo "Total empty directories for user ""$oo_user"": ""$oo_emptydirs"
    echo
  fi
done
echo "Totals"
echo "Total files            : ""$oo_totalfiles"
echo "Total valid dates      : ""$oo_totalvaliddates"
echo "Total expired files    : ""$oo_totalexpiredfiles"
echo "Total invalid dates    : ""$oo_totalinvaliddates"
echo "Total empty directories: ""$oo_totalemptydirs"
} >"$oo_reportfile"
cat "$oo_reportfile"
rm -f "$oo_reportfile"
